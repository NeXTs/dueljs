/*!
 * DuelJS JavaScript Library v0.1
 * https://github.com/studentIvan/dueljs
 *
 * Copyright 2014 Maslov Ivan
 * Released under the MIT license
 * https://raw.githubusercontent.com/studentIvan/dueljs/master/LICENSE
 */
duel={};duel.isLocalStorageAvailable=function(){try{return"localStorage"in window&&window["localStorage"]!==null}catch(e){return false}};duel._DuelAbstractChannel=function(){var e=function(){};e.prototype.getName=function(){return this._name};e.prototype.setCurrentWindowAsMaster=function(){return true};e.prototype.currentWindowIsMaster=function(){return true};return e}();duel._generateWindowID=function(){this._windowID=+Math.random().toString().split(".")[1];return this._windowID};duel.getWindowID=function(){return this._windowID?this._windowID:this._generateWindowID()};duel.DuelLocalStorageChannel=function(e){this._name=e;this.setCurrentWindowAsMaster()};duel.DuelLocalStorageChannel.prototype=duel._DuelAbstractChannel.prototype;duel.DuelLocalStorageChannel.prototype.setCurrentWindowAsMaster=function(){var e,t,n,r,i=duel.getWindowID(),s="dueljs_channel_"+this.getName();if(n=localStorage.getItem(s)){for(n=JSON.parse(n),r=-1,e=0,t=n.length;e<t;e++){n[e].master=false;if(n[e].id===i){r=e}}if(r===-1){n.push({id:i,master:true})}else{n[r].master=true}localStorage.setItem(s,JSON.stringify(n))}else{localStorage.setItem(s,JSON.stringify([{id:i,master:true}]))}return true};duel.DuelLocalStorageChannel.prototype.currentWindowIsMaster=function(){var e,t,n,r,i=duel.getWindowID(),s="dueljs_channel_"+this.getName();if(n=localStorage.getItem(s)){for(n=JSON.parse(n),r=-1,e=0,t=n.length;e<t;e++){if(n[e].id===i){r=e;break}}return r===-1?false:n[r].master}else{return false}};duel.DuelFakeChannel=function(e){this._name=e};duel.DuelFakeChannel.prototype=duel._DuelAbstractChannel.prototype;duel.activeChannels=[];duel.channel=function(e){var t=this.isLocalStorageAvailable()?new this.DuelLocalStorageChannel(e):new this.DuelFakeChannel(e);duel.activeChannels.push(t);return t};duel.makeCurrentWindowMaster=function(){for(var e=duel.activeChannels.length-1;e>=0;e--){try{duel.activeChannels[e].setCurrentWindowAsMaster()}catch(t){}}};window.onfocus=function(){duel.makeCurrentWindowMaster()};window.isMaster=function(){return duel.activeChannels.length?duel.activeChannels[0].currentWindowIsMaster():false};if(document.addEventListener){document.addEventListener("visibilitychange",function(){if(!document.hidden){duel.makeCurrentWindowMaster()}})}